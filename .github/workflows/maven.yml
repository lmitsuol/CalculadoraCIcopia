name: Integração continua de Java com Maven
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  # Jobs do ambiente de desenvolvimento
  build-dev:
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3
    - name: Configura o JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Compila o projeto com Maven
      run: mvn -B compile --file pom.xml
  
  # Jobs do ambiente de homologação
  build-hmg:
    runs-on: ubuntu-latest
    environment: 
      name: hmg
    needs: build-dev
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3 
      with:
        fetch-depth: 0 
    - name: Configura o JDK 18
      uses: actions/setup-java@v3      
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Testa o projeto com Maven
      run: mvn -B test --file pom.xml
    # Executa os passos da análise do código com o sonarcube     
    - name: Cache dos pacotes do SonarCloud
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache dos pacotes do Maven
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Verifica o projeto com Maven e Jacoco
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=lmitsuol_CalculadoraCI

# Jobs do ambiente de produção
  build-prd:

    runs-on: ubuntu-latest
    environment:
      name: prd
      needs: build-hmg
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        
        cache: maven
    - name: Empacota projeto com Maven
      run: mvn -B package --file pom.xml
    
    - name: Crie uma pasta temp de downloads de artefatos
      run: mkdir staging
    - name: Copia artefatos a serem publicados na pasta temp
      run: cp target/*.war staging
    - name: Usa upload artifact github Action
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
